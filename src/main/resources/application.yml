server:
  port: 8081

spring:
  application:
    name: biblim-booker
  datasource:
    url: jdbc:postgresql://localhost:15432/bookerdb
    username: bookeruser
    password: bookerpassword
    driverClassName: org.postgresql.Driver
  flyway:
    enabled: true
    validate-on-migrate: true
  ai:
    vectorstore:
      qdrant:
        host: localhost
        port: 6334
        api-key: text
        collection-name: books
        use-tls: false
        initialize-schema: true
    ollama:
      init:
        pull-model-strategy: always
        embedding:
          additional-models:
            - nomic-embed-text
      base-url: http://localhost:7869
    model:
      embedding: ollama
      chat: none
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

cloud:
  aws:
    credentials:
      access-key: text
      secret-key: text
    endpoint: text
    bucket-name:
      book: books-images
      author: author-images

qdrant:
  collections:
    BOOK: books
    AUTHOR: authors

grpc:
  client:
    gandalf:
      address: localhost:9098
      negotiation-type: plaintext

kafka:
  topics:
    notification:
      destination: okarun.notifications
  clusters:
    default:
      bootstrap-servers:
        - localhost:29092
      properties:
        acks: -1
        delivery.timeout.ms: 90000
        batch.size: 10240
        linger.ms: 100
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
      producer:
        client-id: liljarn.gandalf
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      security:
        protocol: PLAINTEXT

jobs:
  reservationCheck:
    cron: "0 0 0 * * ?"
    enabled: true

api:
  management:
    header: "X-MANAGEMENT-API"
    key: "text"
  internal:
    header: "X-INTERNAL-API"
    services:
      gandalf: "text"
      okarun: "text"
      rohan: "text"

web-clients:
  clients:
    rohan:
      destination: http://localhost:8083
      headers:
        X-INTERNAL-API: BOOKER_INTERNAL_KEY

management:
  endpoint:
    health:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include:
          - health
  server:
    port: 8081
